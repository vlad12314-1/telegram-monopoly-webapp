import asyncio
import logging
import random
import sys
from os import getenv

from aiogram import Bot, Dispatcher, html
from aiogram.client.default import DefaultBotProperties
from aiogram.enums import ParseMode
from aiogram.filters import CommandStart, Command
from aiogram.types import Message, WebAppInfo, InlineKeyboardMarkup, InlineKeyboardButton

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–æ–≤
logging.basicConfig(level=logging.INFO, stream=sys.stdout)
logger = logging.getLogger(__name__)

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞
TOKEN = getenv("7775775971:AAHbXc4VaJxsa3K1H4eQKoGOxzp6PWNA_Lw")
bot = Bot(token=TOKEN, default=DefaultBotProperties(parse_mode=ParseMode.HTML))
dp = Dispatcher()

# –•—Ä–∞–Ω–µ–Ω–∏–µ –∏–≥—Ä–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö
games = {}


class SimpleMonopolyGame:
    def __init__(self, chat_id):
        self.chat_id = chat_id
        self.players = []
        self.money = {}
        self.positions = {}
        self.current_player = 0
        self.properties = {
            1: {"name": "–£–ª–∏—Ü–∞ 1", "price": 100, "owner": None},
            3: {"name": "–£–ª–∏—Ü–∞ 2", "price": 150, "owner": None},
            5: {"name": "–í–æ–∫–∑–∞–ª", "price": 200, "owner": None}
        }

    def add_player(self, user_id, username):
        if user_id not in self.players:
            self.players.append(user_id)
            self.money[user_id] = 1000
            self.positions[user_id] = 0
            return f"{username} –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª—Å—è –∫ –∏–≥—Ä–µ!"
        return f"{username} —É–∂–µ –≤ –∏–≥—Ä–µ!"

    async def roll_dice(self, user_id):
        if user_id != self.players[self.current_player]:
            return "–°–µ–π—á–∞—Å –Ω–µ –≤–∞—à —Ö–æ–¥!"

        dice = random.randint(1, 6)
        self.positions[user_id] = (self.positions[user_id] + dice) % 8

        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–ª–µ—Ç–∫–∏
        result = await self.handle_position(user_id)

        # –ü–µ—Ä–µ—Ö–æ–¥ —Ö–æ–¥–∞
        self.current_player = (self.current_player + 1) % len(self.players)

        return (
            f"üé≤ –í—ã–ø–∞–ª–æ: {dice}\n"
            f"‚û°Ô∏è –ù–æ–≤–∞—è –ø–æ–∑–∏—Ü–∏—è: {self.get_position_name(self.positions[user_id])}\n"
            f"üí∞ –í–∞—à –±–∞–ª–∞–Ω—Å: {self.money[user_id]}$\n"
            f"{result}"
        )

    def get_position_name(self, pos):
        if pos in self.properties:
            return self.properties[pos]["name"]
        positions = {
            0: "–°—Ç–∞—Ä—Ç",
            2: "–ù–∞–ª–æ–≥",
            4: "–®–∞–Ω—Å",
            6: "–¢—é—Ä—å–º–∞"
        }
        return positions.get(pos, f"–ö–ª–µ—Ç–∫–∞ {pos}")

    async def handle_position(self, user_id):
        pos = self.positions[user_id]

        if pos == 2:  # –ù–∞–ª–æ–≥
            self.money[user_id] -= 100
            return "üí∏ –í—ã –ø–ª–∞—Ç–∏—Ç–µ –Ω–∞–ª–æ–≥ 100$"

        elif pos == 6:  # –¢—é—Ä—å–º–∞
            return "üö® –í—ã –ø–æ–ø–∞–ª–∏ –≤ —Ç—é—Ä—å–º—É! –ü—Ä–æ–ø—É—Å—Ç–∏—Ç–µ —Ö–æ–¥."

        elif pos == 4:  # –®–∞–Ω—Å
            action = random.choice(["–ü–æ–ª—É—á–∏—Ç–µ 50$", "–ó–∞–ø–ª–∞—Ç–∏—Ç–µ 50$"])
            if "–ü–æ–ª—É—á–∏—Ç–µ" in action:
                self.money[user_id] += 50
            else:
                self.money[user_id] -= 50
            return f"üé¥ –ö–∞—Ä—Ç–æ—á–∫–∞: {action}"

        elif pos in self.properties:
            prop = self.properties[pos]
            if prop["owner"] is None:
                return f"üè† {prop['name']} –¥–æ—Å—Ç—É–ø–Ω–æ –¥–ª—è –ø–æ–∫—É–ø–∫–∏ (/buy)"
            elif prop["owner"] != user_id:
                rent = prop["price"] // 2
                self.money[user_id] -= rent
                self.money[prop["owner"]] += rent
                return f"üè† –í—ã –ø–ª–∞—Ç–∏—Ç–µ –∞—Ä–µ–Ω–¥—É {rent}$"

        return ""


@dp.message(CommandStart())
async def start_command(message: Message) -> None:
    keyboard = InlineKeyboardMarkup(
        inline_keyboard=[
            [InlineKeyboardButton(
                text="üéÆ –ò–≥—Ä–∞—Ç—å –≤ –ú–æ–Ω–æ–ø–æ–ª–∏—é",
                web_app=WebAppInfo(url="https://vlad12314-1.github.io/telegram-monopoly-webapp/")
            )]
        ]
    )

    await message.answer(
        f"–ü—Ä–∏–≤–µ—Ç, {html.bold(message.from_user.full_name)}!\n"
        "–î–∞–≤–∞–π—Ç–µ —Å—ã–≥—Ä–∞–µ–º –≤ —É–ø—Ä–æ—â–µ–Ω–Ω—É—é –ú–æ–Ω–æ–ø–æ–ª–∏—é!",
        reply_markup=keyboard
    )


@dp.message(Command("newgame"))
async def new_game(message: Message):
    games[message.chat.id] = SimpleMonopolyGame(message.chat.id)
    await message.answer(
        "–ù–æ–≤–∞—è –∏–≥—Ä–∞ —Å–æ–∑–¥–∞–Ω–∞!\n"
        "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /join —á—Ç–æ–±—ã –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è\n"
        "–ö–æ–≥–¥–∞ –≤—Å–µ –≥–æ—Ç–æ–≤—ã - /startgame"
    )


@dp.message(Command("join"))
async def join_game(message: Message):
    if message.chat.id not in games:
        await message.answer("–°–Ω–∞—á–∞–ª–∞ —Å–æ–∑–¥–∞–π—Ç–µ –∏–≥—Ä—É (/newgame)")
        return

    result = games[message.chat.id].add_player(
        message.from_user.id,
        message.from_user.full_name
    )
    await message.answer(result)


@dp.message(Command("startgame"))
async def start_game(message: Message):
    if message.chat.id not in games:
        await message.answer("–°–Ω–∞—á–∞–ª–∞ —Å–æ–∑–¥–∞–π—Ç–µ –∏–≥—Ä—É (/newgame)")
        return

    game = games[message.chat.id]
    if len(game.players) < 2:
        await message.answer("–ù—É–∂–Ω–æ –º–∏–Ω–∏–º—É–º 2 –∏–≥—Ä–æ–∫–∞!")
        return

    await message.answer(
        "–ò–≥—Ä–∞ –Ω–∞—á–∞–ª–∞—Å—å!\n"
        f"–ü–µ—Ä–≤—ã–º —Ö–æ–¥–∏—Ç –∏–≥—Ä–æ–∫ {game.current_player + 1}\n"
        "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /roll –¥–ª—è –±—Ä–æ—Å–∫–∞ –∫—É–±–∏–∫–æ–≤"
    )


@dp.message(Command("roll"))
async def roll_dice(message: Message):
    if message.chat.id not in games:
        await message.answer("–°–Ω–∞—á–∞–ª–∞ —Å–æ–∑–¥–∞–π—Ç–µ –∏–≥—Ä—É (/newgame)")
        return

    result = await games[message.chat.id].roll_dice(message.from_user.id)
    await message.answer(result)


@dp.message(Command("buy"))
async def buy_property(message: Message):
    if message.chat.id not in games:
        await message.answer("–°–Ω–∞—á–∞–ª–∞ —Å–æ–∑–¥–∞–π—Ç–µ –∏–≥—Ä—É (/newgame)")
        return

    game = games[message.chat.id]
    user_id = message.from_user.id
    pos = game.positions[user_id]

    if pos not in game.properties:
        await message.answer("–ó–¥–µ—Å—å –Ω–µ–ª—å–∑—è –∫—É–ø–∏—Ç—å –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç—å")
        return

    prop = game.properties[pos]
    if prop["owner"] is not None:
        await message.answer("–≠—Ç–∞ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å —É–∂–µ –∫—É–ø–ª–µ–Ω–∞")
        return

    if game.money[user_id] < prop["price"]:
        await message.answer("–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–µ–Ω–µ–≥!")
        return

    game.money[user_id] -= prop["price"]
    prop["owner"] = user_id
    await message.answer(f"–í—ã –∫—É–ø–∏–ª–∏ {prop['name']} –∑–∞ {prop['price']}$")


async def main() -> None:
    await dp.start_polling(bot)


if __name__ == "__main__":
    asyncio.run(main())
